terraform {
  required_providers {
    aws = {
      source = "hashicorp/aws"
      version = "4.36.1"
    }
  }
}

provider "aws" {
  region = "us-east-1"
}

resource "aws_vpc" "main" {
  cidr_block = "10.0.0.0/16"  
  #region = "us-east-1"
}
resource "aws_subnet" "sub1" {
  vpc_id     = aws_vpc.main.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "us-east-1a"



 tags = {
    Name = "Main"
  }
}
resource "aws_subnet" "sub2" {
  vpc_id     = aws_vpc.main.id
  cidr_block = "10.0.2.0/24"
  availability_zone = "us-east-1b"



 tags = {
    Name = "Main"
  }
}
resource "aws_security_group" "sg1" {
  name        = "allow_tls"
  description = "Allow TLS inbound traffic"
  vpc_id      = aws_vpc.main.id



 ingress {
    description      = "TLS from VPC"
    from_port        = 3306
    to_port          = 3306
    protocol         = "tcp"
    
  }



 ingress {
    description      = "TLS from VPC"
    from_port        = 22
    to_port          = 22
    protocol         = "tcp"
    
  }



 egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }
}



resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.main.id



 tags = {
    Name = "ig"
  }
}
resource "aws_route_table" "rt1" {
  vpc_id = aws_vpc.main.id



 route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
  }
  }
resource "aws_route_table_association" "rt2" {
  subnet_id      = aws_subnet.sub1.id
  route_table_id = aws_route_table.rt1.id
}
resource "aws_db_instance" "myrds1" {
  allocated_storage    = 10
  db_name              = "mydb"
  engine               = "mysql"
  engine_version       = "5.7"
  instance_class       = "db.t3.micro"
  username             = "admin"
  password             = "Admin123"
  skip_final_snapshot  = true
  publicly_accessible  = true
  # db_snapshot_identifier = aws_db_snapshot.sn1.id
  # aws_db_subnet_group = aws_db_subnet_group.default.name
  multi_az            = false
  #vpc_security_group_ids = [aws_security_group.sg1.id]
}
resource "aws_db_snapshot" "sn1" {
  db_instance_identifier = aws_db_instance.myrds1.id
  db_snapshot_identifier = "testsnapshot1234"
# most_recent = true
# snapshot_type = "manual"
}



resource "aws_db_subnet_group" "default" {
  name       = "main"
  subnet_ids = [aws_subnet.sub1.id, aws_subnet.sub2.id]



 tags = {
    Name = "My DB subnet"
  }
}

